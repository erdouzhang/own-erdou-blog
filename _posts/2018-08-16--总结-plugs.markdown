---
layout:     post
title:      "echarts"
subtitle:   " \" 总结\""
date:       2018-08-16 22:10:00
author:     "Erdou"
header-img: "img/post-bg/litter_girl.jpg"
catalog: false
tags: 
    - 日志
---

> “Happy little child launching paper origami boat while floating in boat on lake”

## echarts图表（折线,圆柱 手机app端显示、可伸缩）

1. 参考 <a herf="http://gallery.echartsjs.com/editor.html?c=pictorialBar-dotted">在线</a>
2. 基础配置：
// Generate data
var category = [];
var dottedBase = +new Date();
var lineData = [];
var barData = [];

for (var i = 0; i < 20; i++) {
	var date = new Date(dottedBase += 1000 * 3600 * 24);
	category.push([
		date.getFullYear(),
		date.getMonth() + 1,
		date.getDate()
	].join('-'));
	var b = Math.random() * 200;
	var d = Math.random() * 200;
	barData.push(b)
	lineData.push(d + b);
}


// option
option = {
	backgroundColor: '#0f375f', // 整体的背景色
	tooltip: { // 鼠标滑过提示
		trigger: 'axis',
		axisPointer: {
			type: 'shadow', // 
			label: {
				show: true,
				backgroundColor: '#333'
			}
		}
	},
	legend: { // 图例显示
		data: ['折线', '圆柱'],
		textStyle: {
			color: '#ccc'
		},
		selected: {
			'折线': false // 默认不显示
		}
	},
	xAxis: {
		data: category, // x轴显示数据（数组动态添加）
		axisLine: {
			lineStyle: { // 坐标轴样式
				color: '#ccc', // 字体颜色
				width: 1 // 横坐标轴线线宽，默认  1
			}
		}
	},
	yAxis: {
		// data:[12,34,56,67,78], 自定义显示数据
		splitLine: {
			show: false
		}, // y轴是否显示分割线
		axisLine: { // 坐标轴样式
			lineStyle: {
				color: '#ccc',
			}
		}
	},
	series: [{ //  系列列表。每个系列通过 type 决定自己的图表类型
		name: '折线', // 系列名称，用于tooltip的显示，legend 的图例筛选(可设置)
		type: 'line',
		smooth: false, // 是否平滑曲线显示 
		showAllSymbol: true, // 只在主轴为类目轴（axis.type 为 'category'）时有效
		symbol: 'emptyCircle', // 标记的图形
		symbolSize: 5, // 标记的图形大小（手机端）
		data: lineData // 数据显示
	}, {
		name: '圆柱', // 柱状图名称
		type: 'bar', // 类型
		barWidth: 10, // 柱条的宽度，不设时自适应。支持设置成相对于类目宽度的百分比
		itemStyle: { // 图形样式
			normal: {
				barBorderRadius: 0, //圆角半径，单位px，支持传入数组分别指定 4 个圆角半径
				color: new echarts.graphic.LinearGradient(
					0, 0, 0, 1, [ // 颜色过度
						{
							offset: 0,
							color: '#14c8d4'
						}, // 红
						{
							offset: 1,
							color: '#43eec6'
						}
					]
				)
			}
		},
		data: barData // 数据展示
	}, {
		name: '折线',
		type: 'bar',
		barGap: '-100%',
		barWidth: 10,
		itemStyle: {
			normal: {
				color: new echarts.graphic.LinearGradient(
					0, 0, 0, 1, [ // 颜色过度(不用时去除)
						{
							offset: 0,
							color: 'rgba(20,200,212,0.5)'
						},
						// {offset: 0.2, color: 'rgba(20,200,212,0.2)'},
						{
							offset: 1,
							color: 'rgba(20,200,212,0)'
						}
					]
				)
			}
		},
		z: -12, // 组件的所有图形的z值。控制图形的前后顺序。z值小的图形会被z值大的图形覆盖
		data: lineData // 数据展示
	}, {
		name: 'dotted',
		type: 'pictorialBar',
		symbol: 'rect',
		itemStyle: {
			normal: {
				color: '#0f375f'
			}
		},
		symbolRepeat: false, //指定图形元素是否重复
		symbolSize: [5, 4], // 可以用数组分开表示宽和高，例如 [20, 10] 表示标记宽为20，高为10
		symbolMargin: 1, // 只有当 symbolRepeat 被使用时有意义。
		z: -10,
		data: lineData // 数据展示
	}]
}; 
3. 后台接口数据最终转换成数组形式(动态改变数据设置，series[0].data=[],series[1].data=[],......)
	首先要清空一下数据，重新赋值

---

## js +new Date()含义  
1. csdn解释: JavaScript中可以在某个元素前使用 ‘+’ 号，这个操作是将该元素转换秤Number类型，如果转换失败，那么将得到 NaN。
2. 所以 +new Date 将会调用 Date.prototype 上的 valueOf 方法，而根据 MDN ，Date.prototype.value 方法等同于 Date.prototype.getTime() 

3. 下列语句
console.log(+new Date);

console.log(new Date().getTime());

console.log(new Date().valueOf());

console.log(new Date() * 1);
 
---

## app小问题(输入框input阻止调出输入法)

	1.第一种方式：<input disalbed/>，添加disabled，禁用输入框；
	2.第二种方式：不使用input,使用其他非焦点获取的标签来代替，比如div；
	3.第三种方式：通过js控制，<input onfocus="this.blur();"/>
---

## HBuilder打包发布app
   待补充
---

## 总结
   待补充
---

